selectedComp2 <-  as.data.frame(t(selectedComp2))
selectedComp2 <-  as.data.frame(t(selectedComp2))
selectedComp2
selectedComp2 <-  as.data.frame(t(selectedComp2))
selectedComp2
meanVal <-  as.data.frame(t(meanVal))
meanVal
newbist30 = bist30[,2:61]
selectedComp1 <- bist30[,bankStocks]
selectedComp2 <- newbist30[ , !(names(newbist30) %in% bankStocks)]
selectedComp2 <- selectedComp2 %>% select(matches("Price"))
selectedComp1 <- selectedComp1 %>%select(matches("Price"))
selectedComp2
selectedComp2 <-  as.data.frame(t(selectedComp2))
selectedComp1 <-  as.data.frame(t(selectedComp1))
names(selectedComp2) <- bist30$Dates
names(selectedComp1) <- bist30$Dates
selectedComp2
meanVal1 <- selectedComp2 %>% summarise_all(mean)
meanVal2 <- selectedComp1 %>% summarise_all(mean)
meanVal1
meanVal1 <-  as.data.frame(t(meanVal1))
meanVal2 <- as.data.frame(t(meanVal2))
meanVal1
meanVal1 <-  as.data.frame(t(meanVal1))
meanVal2 <- as.data.frame(t(meanVal2))
meanVal1
meanVal2
meanVal1 <-  as.data.frame(t(meanVal1))
meanVal2 <- as.data.frame(t(meanVal2))
meanVal1
meanVal1 <-  as.data.frame(t(meanVal1))
meanVal2 <- as.data.frame(t(meanVal2))
meanVal2
selectedComp2 <-  as.data.frame(t(selectedComp2))
selectedComp1 <-  as.data.frame(t(selectedComp1))
names(selectedComp2) <- bist30$Dates
selectedComp2 <-  as.data.frame(t(selectedComp2))
selectedComp1 <-  as.data.frame(t(selectedComp1))
names(selectedComp2) <- bist30$Dates
names(selectedComp1) <- bist30$Dates
selectedComp1
meanVal1 <- selectedComp2 %>% summarise_all(mean)
meanVal2 <- selectedComp1 %>% summarise_all(mean)
meanVal2
meanVal1 <- selectedComp2 %>% summarise_all(mean)
meanVal2 <- selectedComp1 %>% summarise_all(mean)
meanVal1
meanVal1 <-  as.data.frame(t(meanVal1))
meanVal2 <- as.data.frame(t(meanVal2))
meanVal2
meanVal1 <-  as.data.frame(t(meanVal1))
meanVal2 <- as.data.frame(t(meanVal2))
meanVal1
meanVal1 <- as.data.frame(t(meanVal1))
meanVal2 <- as.data.frame(t(meanVal2))
meanVal1
CompaniesPrice <-melt(data.frame(meanVal1 ,meanVal2))
library(tidyr)
library(readxl)
library(ggplot2)
library(dplyr)
library(reshape)
CompaniesPrice <-melt(data.frame(meanVal1 ,meanVal2))
CompaniesPrice <-melt(data.frame(meanVal1 ,meanVal2))
CompaniesPrice
CompaniesPrice <-melt(data.frame(meanVal1 ,meanVal2))
CompaniesPrice
meanVal1 <- as.data.frame(t(meanVal1))
meanVal2 <- as.data.frame(t(meanVal2))
meanVal2
meanVal1 <- as.data.frame(t(meanVal1))
meanVal2 <- as.data.frame(t(meanVal2))
meanVal2
meanVal1 <- as.data.frame(t(meanVal1))
meanVal2 <- as.data.frame(t(meanVal2))
meanVal2
meanVal1 <- as.data.frame(t(meanVal1))
meanVal2 <- as.data.frame(t(meanVal2))
meanVal2
CompaniesPrice <-melt(data.frame(meanVal1 ,meanVal2))
CompaniesPrice
CompaniesPrice <-melt(data.frame(meanVal1 ,meanVal2))
CompaniesPrice
CompaniesPrice <-melt(data.frame(meanVal1 ,meanVal2))
CompaniesPrice
meanVal1
newValue1<- as.data.frame(t(meanVal1))
newValue2 <- as.data.frame(t(meanVal2))
meanVal2
newValue1<- as.data.frame(t(meanVal1))
newValue2 <- as.data.frame(t(meanVal2))
newValue2
meanVal1 <- selectedComp2 %>% summarise_all(mean)
meanVal2 <- selectedComp1 %>% summarise_all(mean)
meanVal1
meanVal1 <- selectedComp2 %>% summarise_all(mean)
meanVal2 <- selectedComp1 %>% summarise_all(mean)
meanVal2
newValue1<- as.data.frame(t(meanVal1))
newValue2 <- as.data.frame(t(meanVal2))
newValue2
newValue1<- as.data.frame(t(meanVal1))
newValue2 <- as.data.frame(t(meanVal2))
newValue1
maxminTable <-melt(data.frame(newValue1 ,newValue2))
CompanyPrices <-melt(data.frame(newValue1 ,newValue2))
CompanyPrices
CompanyPrices <-melt(data.frame(newValue1 ,newValue2))
CompanyPrices
CompanyPrices <-melt(data.frame(newValue1$V1 ,newValue2$V1))
CompanyPrices
newValue1<- as.data.frame(t(meanVal1))
newValue2 <- as.data.frame(t(meanVal2))
newValue2
newValue1<- as.data.frame(t(meanVal1))
newValue2 <- as.data.frame(t(meanVal2))
newValue1
newValue1<- as.data.frame(t(meanVal1))
newValue2 <- as.data.frame(t(meanVal2))
names(newValue1) <- "Prices1"
names(newValue2) <- "Prices2"
CompanyPrices <-melt(data.frame(newValue1$V1 ,newValue2$V1))
CompanyPrices
CompanyPrices <-melt(data.frame(newValue1$V1 ,newValue2$V1))
CompanyPrices
CompanyPrices <-melt(data.frame(newValue1 ,newValue2))
CompanyPrices
CompanyPrices <-melt(data.frame(newValue1 ,newValue2))
CompanyPrices
CompanyPrices <-data.frame(bist30$Dates,newValue1$Prices1,newValue2$Prices2)
CompanyPrices
newbist30 = bist30[,2:61]
selectedComp1 <- bist30[,bankStocks]
selectedComp2 <- newbist30[ , !(names(newbist30) %in% bankStocks)]
totalComp <- newbist30 %>% select(matches("Price"))
selectedComp2 <- selectedComp2 %>% select(matches("Price"))
selectedComp1 <- selectedComp1 %>%select(matches("Price"))
selectedComp2
newbist30 = bist30[,2:61]
selectedComp1 <- bist30[,bankStocks]
selectedComp2 <- newbist30[ , !(names(newbist30) %in% bankStocks)]
totalComp <- newbist30 %>% select(matches("Price"))
selectedComp2 <- selectedComp2 %>% select(matches("Price"))
selectedComp1 <- selectedComp1 %>%select(matches("Price"))
totalComp
selectedComp2 <-  as.data.frame(t(selectedComp2))
selectedComp1 <-  as.data.frame(t(selectedComp1))
totalComp <- as.data.frame(t(totalComp))
names(selectedComp2) <- bist30$Dates
names(selectedComp1) <- bist30$Dates
names(totalComp) <- bist30$Dates
selectedComp1
meanVal1 <- selectedComp2 %>% summarise_all(mean)
meanVal2 <- selectedComp1 %>% summarise_all(mean)
Totalmean <- totalComp %>% summarise_all(mean)
newValue1<- as.data.frame(t(meanVal1))
newValue2 <- as.data.frame(t(meanVal2))
totalValue <-  as.data.frame(t(Totalmean))
names(newValue1) <- "Prices1"
names(newValue2) <- "Prices2"
names(totalValue) <- "TotalPrices"
CompanyPrices <-data.frame(bist30$Dates,newValue1$Prices1,newValue2$Prices2,totalValue$TotalPrices)
CompanyPrices
CompanyPrices <-data.frame(bist30$Dates,newValue1$Prices1,newValue2$Prices2,totalValue$TotalPrices)
CompanyPrices
ggplot(CompanyPrices, aes(x = bist30.Dates)) +
geom_line(aes(y = newValue1.Prices1, colour = "newValue1.Prices1")) +
geom_line(aes(y = newValue2.Prices2, colour = "newValue2.Prices2")) +
geom_line(aes(y = totalValue.TotalPrices, colour = "totalValue.TotalPrices"))
knitr::opts_chunk$set(echo = T,
results = "hide")
library(shiny)
library(Hmisc)
library(gridExtra)
library(GGally)
library(tibble)
library(dplyr)
library(tidyr)
library(reshape2)
library(tidyverse)
library(ggplot2)
library(corrgram)
library(corrplot)
library(date)
library(readxl)
library(knitr)
names(bist30)
bankStocks <- c("GARAN_Price","GARAN_Volume")
OtherStocks
newbist30 = bist30[,62:90]
selectedComp1 <- bist30[,bankStocks]
selectedComp2 <- newbist30[ , !(names(newbist30) %in% bankStocks)]
totalComp <- newbist30 %>% select(matches("norm"))
selectedComp2 <- selectedComp2 %>% select(matches("Price"))
selectedComp1 <- selectedComp1 %>%select(matches("Price"))
totalComp
newbist30 = bist30[,61:90]
selectedComp1 <- bist30[,bankStocks]
selectedComp2 <- newbist30[ , !(names(newbist30) %in% bankStocks)]
totalComp <- newbist30 %>% select(matches("norm"))
selectedComp2 <- selectedComp2 %>% select(matches("Price"))
selectedComp1 <- selectedComp1 %>%select(matches("Price"))
totalComp
newbist30 = bist30[,60:90]
selectedComp1 <- bist30[,bankStocks]
selectedComp2 <- newbist30[ , !(names(newbist30) %in% bankStocks)]
totalComp <- newbist30 %>% select(matches("norm"))
selectedComp2 <- selectedComp2 %>% select(matches("Price"))
selectedComp1 <- selectedComp1 %>%select(matches("Price"))
totalComp
newbist30 = bist30[,60:90]
selectedComp1 <- bist30[,bankStocks]
selectedComp2 <- newbist30[ , !(names(newbist30) %in% bankStocks)]
totalComp <- newbist30 %>% select(matches("norm"))
selectedComp2 <- selectedComp2 %>% select(matches("norm"))
selectedComp1 <- selectedComp1 %>%select(matches("norm"))
totalComp
names(bist30)
bankStocks <- c("GARAN_Price_norm","VAKBN_Price_norm",)
newbist30 = bist30[,60:90]
selectedComp1 <- bist30[,bankStocks]
selectedComp2 <- newbist30[ , !(names(newbist30) %in% bankStocks)]
totalComp <- newbist30 %>% select(matches("norm"))
selectedComp2 <- selectedComp2 %>% select(matches("norm"))
selectedComp1 <- selectedComp1 %>%select(matches("norm"))
totalComp
newbist30 = bist30[,61:92]
newbist30 = bist30[,61:91]
selectedComp1 <- bist30[,bankStocks]
selectedComp2 <- newbist30[ , !(names(newbist30) %in% bankStocks)]
totalComp <- newbist30 %>% select(matches("norm"))
selectedComp2 <- selectedComp2 %>% select(matches("norm"))
selectedComp1 <- selectedComp1 %>%select(matches("norm"))
totalComp
newbist30 = bist30[,61:91]
selectedComp1 <- bist30[,bankStocks]
selectedComp2 <- newbist30[ , !(names(newbist30) %in% bankStocks)]
totalComp <- newbist30 %>% select(matches("norm"))
totalComp
newbist30 = bist30[,61:91]
selectedComp1 <- bist30[,bankStocks]
selectedComp2 <- newbist30[ , !(names(newbist30) %in% bankStocks)]
totalComp <- newbist30 %>% select(matches("norm"))
selectedComp2
newbist30 = bist30[,61:91]
selectedComp1 <- newbist30[,bankStocks]
names(bist30)
bankStocks <- c("GARAN_Price_norm","VAKBN_Price_norm")
OtherStocks
newbist30 = bist30[,61:91]
selectedComp1 <- newbist30[,bankStocks]
selectedComp2 <- newbist30[ , !(names(newbist30) %in% bankStocks)]
totalComp <- newbist30 %>% select(matches("norm"))
selectedComp2
newbist30 = bist30[,62:91]
selectedComp1 <- newbist30[,bankStocks]
selectedComp2 <- newbist30[ , !(names(newbist30) %in% bankStocks)]
totalComp <- newbist30 %>% select(matches("norm"))
selectedComp2
names(bist30)
bankStocks <- c("GARAN_Price_norm","VAKBN_Price_norm","AKBNK_Price_norm","YKBNK _Price_norm","ASYAB_Price_norm","HALKB_Price_norm")
newbist30 = bist30[,62:91]
selectedComp1 <- newbist30[,bankStocks]
selectedComp2 <- newbist30[ , !(names(newbist30) %in% bankStocks)]
totalComp <- newbist30 %>% select(matches("norm"))
selectedComp2
selectedComp2 <-  as.data.frame(t(selectedComp2))
selectedComp1 <-  as.data.frame(t(selectedComp1))
totalComp <- as.data.frame(t(totalComp))
names(selectedComp2) <- bist30$Dates
names(selectedComp1) <- bist30$Dates
names(totalComp) <- bist30$Dates
selectedComp1
meanVal1 <- selectedComp2 %>% summarise_all(mean)
meanVal2 <- selectedComp1 %>% summarise_all(mean)
Totalmean <- totalComp %>% summarise_all(mean)
newValue1<- as.data.frame(t(meanVal1))
newValue2 <- as.data.frame(t(meanVal2))
totalValue <-  as.data.frame(t(Totalmean))
names(newValue1) <- "Prices1"
names(newValue2) <- "Prices2"
names(totalValue) <- "TotalPrices"
CompanyPrices <-data.frame(bist30$Dates,newValue1$Prices1,newValue2$Prices2,totalValue$TotalPrices)
CompanyPrices
ggplot(CompanyPrices, aes(x = bist30.Dates)) +
geom_line(aes(y = newValue1.Prices1, colour = "newValue1.Prices1")) +
geom_line(aes(y = newValue2.Prices2, colour = "newValue2.Prices2")) +
geom_line(aes(y = totalValue.TotalPrices, colour = "totalValue.TotalPrices"))
meanVal1 <- selectedComp1 %>% summarise_all(mean)
meanVal2 <- selectedComp2 %>% summarise_all(mean)
Totalmean <- totalComp %>% summarise_all(mean)
newValue1<- as.data.frame(t(meanVal1))
newValue2 <- as.data.frame(t(meanVal2))
totalValue <-  as.data.frame(t(Totalmean))
names(newValue1) <- "Prices1"
names(newValue2) <- "Prices2"
names(totalValue) <- "TotalPrices"
CompanyPrices <-data.frame(bist30$Dates,newValue1$Prices1,newValue2$Prices2,totalValue$TotalPrices)
CompanyPrices
ggplot(CompanyPrices, aes(x = bist30.Dates)) +
geom_line(aes(y = newValue1.Prices1, colour = "newValue1.Prices1")) +
geom_line(aes(y = newValue2.Prices2, colour = "newValue2.Prices2")) +
geom_line(aes(y = totalValue.TotalPrices, colour = "totalValue.TotalPrices"))
names(bist30)
bankStocks <- c("GARAN_Price_norm","VAKBN_Price_norm","AKBNK_Price_norm","YKBNK _Price_norm","ASYAB_Price_norm","HALKB_Price_norm","ISCTR_Price_norm",)
newbist30 = bist30[,62:91]
selectedComp1 <- newbist30[,bankStocks]
selectedComp2 <- newbist30[ , !(names(newbist30) %in% bankStocks)]
totalComp <- newbist30 %>% select(matches("norm"))
selectedComp2
selectedComp2 <-  as.data.frame(t(selectedComp2))
selectedComp1 <-  as.data.frame(t(selectedComp1))
totalComp <- as.data.frame(t(totalComp))
names(selectedComp2) <- bist30$Dates
names(selectedComp1) <- bist30$Dates
names(totalComp) <- bist30$Dates
selectedComp1
newbist30 = bist30[,62:91]
selectedComp1 <- newbist30[,bankStocks]
selectedComp2 <- newbist30[ , !(names(newbist30) %in% bankStocks)]
totalComp <- newbist30 %>% select(matches("norm"))
selectedComp2
names(bist30)
bankStocks <- c("GARAN_Price_norm","VAKBN_Price_norm","AKBNK_Price_norm","YKBNK _Price_norm","ASYAB_Price_norm","HALKB_Price_norm","ISCTR_Price_norm")
newbist30 = bist30[,62:91]
selectedComp1 <- newbist30[,bankStocks]
selectedComp2 <- newbist30[ , !(names(newbist30) %in% bankStocks)]
totalComp <- newbist30 %>% select(matches("norm"))
selectedComp2
selectedComp2 <-  as.data.frame(t(selectedComp2))
selectedComp1 <-  as.data.frame(t(selectedComp1))
totalComp <- as.data.frame(t(totalComp))
names(selectedComp2) <- bist30$Dates
names(selectedComp1) <- bist30$Dates
names(totalComp) <- bist30$Dates
selectedComp1
meanVal1 <- selectedComp1 %>% summarise_all(mean)
meanVal2 <- selectedComp2 %>% summarise_all(mean)
Totalmean <- totalComp %>% summarise_all(mean)
newValue1<- as.data.frame(t(meanVal1))
newValue2 <- as.data.frame(t(meanVal2))
totalValue <-  as.data.frame(t(Totalmean))
names(newValue1) <- "Prices1"
names(newValue2) <- "Prices2"
names(totalValue) <- "TotalPrices"
CompanyPrices <-data.frame(bist30$Dates,newValue1$Prices1,newValue2$Prices2,totalValue$TotalPrices)
CompanyPrices
ggplot(CompanyPrices, aes(x = bist30.Dates)) +
geom_line(aes(y = newValue1.Prices1, colour = "newValue1.Prices1")) +
geom_line(aes(y = newValue2.Prices2, colour = "newValue2.Prices2")) +
geom_line(aes(y = totalValue.TotalPrices, colour = "totalValue.TotalPrices"))
ggplot(CompanyPrices, aes(x = bist30.Dates)) +
geom_line(aes(y = newValue1.Prices1, colour = "bankSectorPrices")) +
geom_line(aes(y = newValue2.Prices2, colour = "OtherPrices")) +
geom_line(aes(y = totalValue.TotalPrices, colour = "TotalPrices"))
ggplot(CompanyPrices, aes(x = bist30.Dates)) +
geom_line(aes(y = newValue1.Prices1, colour = "bankSectorPrices")) +
geom_line(aes(y = newValue2.Prices2, colour = "OtherPrices")) +
geom_line(aes(y = totalValue.TotalPrices, colour = "TotalPrices")) +
xlab("X-axis label") + ylab("y-axix label")
ggplot(CompanyPrices, aes(x = bist30.Dates)) +
geom_line(aes(y = newValue1.Prices1, colour = "bankSectorPrices")) +
geom_line(aes(y = newValue2.Prices2, colour = "OtherPrices")) +
geom_line(aes(y = totalValue.TotalPrices, colour = "TotalPrices")) +
xlab("Years") + ylab("Normalized Prices")
CompanyPrices <-data.frame(bist30$Dates,newValue1$Prices1,newValue2$Prices2,totalValue$TotalPrices)
names(CompanyPrices) <- c("Dates","bankSectorPrices","OtherPrices","TotalPrices")
CompanyPrices <-data.frame(bist30$Dates,newValue1$Prices1,newValue2$Prices2,totalValue$TotalPrices)
names(CompanyPrices) <- c("Dates","bankSectorPrices","OtherPrices","TotalPrices")
CompanyPrices
ggplot(CompanyPrices, aes(x = bist30.Dates)) +
geom_line(aes(y = newValue1.Prices1, colour = "bankSectorPrices")) +
geom_line(aes(y = newValue2.Prices2, colour = "OtherPrices")) +
geom_line(aes(y = totalValue.TotalPrices, colour = "TotalPrices")) +
xlab("Years") + ylab("Normalized Prices")
ggplot(CompanyPrices, aes(x = bist30.Dates)) +
geom_line(aes(y = newValue1.Prices1, colour = "bankSectorPrices")) +
geom_line(aes(y = newValue2.Prices2, colour = "OtherPrices")) +
geom_line(aes(y = totalValue.TotalPrices, colour = "TotalPrices")) +
xlab("Years") + ylab("Normalized Prices")
ggplot(CompanyPrices, aes(x = bist30.Dates)) +
geom_line(aes(y = newValue1.Prices1, colour = "bankSectorPrices")) +
geom_line(aes(y = newValue2.Prices2, colour = "OtherPrices")) +
geom_line(aes(y = totalValue.TotalPrices, colour = "TotalPrices")) +
xlab("Years") + ylab("Normalized Prices")
ggplot(CompanyPrices, aes(x = bist30.Dates)) +
geom_line(aes(y = newValue1.Prices1, colour = "bankSectorPrices")) +
geom_line(aes(y = newValue2.Prices2, colour = "OtherPrices")) +
geom_line(aes(y = totalValue.TotalPrices, colour = "TotalPrices")) +
xlab("Years") + ylab("Normalized Prices")
CompanyPrices <-data.frame(bist30$Dates,newValue1$Prices1,newValue2$Prices2,totalValue$TotalPrices)
names(CompanyPrices) <- c("Dates","bankSectorPrices","OtherPrices","TotalPrices")
CompanyPrices
ggplot(CompanyPrices, aes(x = bist30.Dates)) +
geom_line(aes(y = newValue1.Prices1, colour = "bankSectorPrices")) +
geom_line(aes(y = newValue2.Prices2, colour = "OtherPrices")) +
geom_line(aes(y = totalValue.TotalPrices, colour = "TotalPrices")) +
xlab("Years") + ylab("Normalized Prices")
CompanyPrices <-data.frame(bist30$Dates,newValue1$Prices1,newValue2$Prices2,totalValue$TotalPrices)
names(CompanyPrices) <- c("Dates","bankSectorPrices","OtherPrices","TotalPrices")
CompanyPrices
ggplot(CompanyPrices, aes(x = bist30.Dates)) +
geom_line(aes(y = bankSectorPrices, colour = "bankSectorPrices")) +
geom_line(aes(y = OtherPrices, colour = "OtherPrices")) +
geom_line(aes(y = TotalPrices, colour = "TotalPrices")) +
xlab("Years") + ylab("Normalized Prices")
ggplot(CompanyPrices, aes(x = Dates)) +
geom_line(aes(y = bankSectorPrices, colour = "bankSectorPrices")) +
geom_line(aes(y = OtherPrices, colour = "OtherPrices")) +
geom_line(aes(y = TotalPrices, colour = "TotalPrices")) +
xlab("Years") + ylab("Normalized Prices")
knitr::opts_chunk$set(echo = T,
results = "hide")
library(shiny)
library(Hmisc)
library(gridExtra)
library(GGally)
library(tibble)
library(dplyr)
library(tidyr)
library(reshape2)
library(tidyverse)
library(ggplot2)
library(corrgram)
library(corrplot)
library(date)
library(readxl)
library(knitr)
# Define UI for application that plots features of movies
ui <- fluidPage(
# Sidebar layout with a input and output definitions
sidebarLayout(
# Inputs
sidebarPanel(
# Select variable for y-axis
selectInput(inputId = "y",
label = "Y-axis:",
choices = c("IMDB rating"          = "imdb_rating",
"IMDB number of votes" = "imdb_num_votes",
"Critics score"        = "critics_score",
"Audience score"       = "audience_score",
"Runtime"              = "runtime"),
selected = "audience_score"),
# Select variable for x-axis
selectInput(inputId = "x",
label = "X-axis:",
choices = c("IMDB rating"          = "imdb_rating",
"IMDB number of votes" = "imdb_num_votes",
"Critics score"        = "critics_score",
"Audience score"       = "audience_score",
"Runtime"              = "runtime"),
selected = "critics_score"),
# Select variable for color
selectInput(inputId = "z",
label = "Color by:",
choices = c("Title type" = "title_type",
"Genre" = "genre",
"MPAA rating" = "mpaa_rating",
"Critics rating" = "critics_rating",
"Audience rating" = "audience_rating"),
selected = "mpaa_rating")
),
# Outputs
mainPanel(
plotOutput(outputId = "scatterplot")
)
)
)
# Define server function required to create the scatterplot
server <- function(input, output) {
# Create the scatterplot object the plotOutput function is expecting
output$scatterplot <- renderTable({
ggplot(data = CompanyPrices, aes_string(x = input$x, y = input$y,
color = input$z)) +
geom_point()
})
}
# Create a Shiny app object
shinyApp(ui = ui, server = server)
knitr::opts_chunk$set(echo = T,
results = "hide")
library(shiny)
library(Hmisc)
library(gridExtra)
library(GGally)
library(tibble)
library(dplyr)
library(tidyr)
library(reshape2)
library(tidyverse)
library(ggplot2)
library(corrgram)
library(corrplot)
library(date)
library(readxl)
library(knitr)
maxVal <- bist30 %>% summarise_all("max") %>%
select(matches("norm"))
minVal <- bist30 %>% summarise_all("min") %>%
select(matches("norm"))
maxmin <- (maxVal-minVal) / minVal
maxmin
df_maxmin <-  as.data.frame(t(maxmin))
maxminTable <-melt(data.frame(companyNames ,df_maxmin))
maxminTable$variable <- NULL
maxminTable$companyNames <- paste(maxminTable$companyNames,"MaxminRange",sep= "&")
maxminTable %>% arrange(desc(value))
maxminTable %>%
arrange(desc(value)) %>%
ggplot(data = ., aes(x = reorder(companyNames, value), y = value,
fill = companyNames, color = companyNames)) + geom_bar(stat = 'identity') + theme(axis.text.x = element_text(angle=65, vjust=0.6)) + coord_flip()
