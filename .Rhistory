theme(axis.text.x = element_text(angle=65, vjust=0.6))
theme_set(theme_bw())
generalCorData %>% arrange(desc(abs(cor))) %>%
ggplot( aes(x=companyNames, y=cor)) +
geom_bar(stat="identity", width=.5, fill="tomato3") +
labs(title="Ordered Bar Chart",
subtitle="Correlation Values",
caption="Correlation graph") +
theme(axis.text.x = element_text(angle=65, vjust=0.6))
theme_set(theme_bw())
generalCorData %>% arrange(desc(abs(cor))) %>%
ggplot( aes(x=row, y=cor)) +
geom_bar(stat="identity", width=.5, fill="tomato3") +
labs(title="Ordered Bar Chart",
subtitle="Correlation Values",
caption="Correlation graph") +
theme(axis.text.x = element_text(angle=65, vjust=0.6))
theme_set(theme_bw())
generalCorData %>% arrange(desc(abs(cor))) %>%
ggplot( aes(x=row + column, y=cor)) +
geom_bar(stat="identity", width=.5, fill="tomato3") +
labs(title="Ordered Bar Chart",
subtitle="Correlation Values",
caption="Correlation graph") +
theme(axis.text.x = element_text(angle=65, vjust=0.6))
theme_set(theme_bw())
generalCorData %>% arrange(desc(abs(cor))) %>%
ggplot( aes(x=names(row)+names(column), y=cor)) +
geom_bar(stat="identity", width=.5, fill="tomato3") +
labs(title="Ordered Bar Chart",
subtitle="Correlation Values",
caption="Correlation graph") +
theme(axis.text.x = element_text(angle=65, vjust=0.6))
theme_set(theme_bw())
generalCorData %>% arrange(desc(abs(cor))) %>%
ggplot( aes(x=column, y=cor)) +
geom_bar(stat="identity", width=.5, fill="tomato3") +
labs(title="Ordered Bar Chart",
subtitle="Correlation Values",
caption="Correlation graph") +
theme(axis.text.x = element_text(angle=65, vjust=0.6))
corrData<-rcorr(as.matrix(df[,2:60]))
generalCorData <- flattenCorrMatrix(corrData$r, corrData$P)
generalCorData
generalCorData.names <- generalCorData$row + "&" + generalCorData$column
corrData<-rcorr(as.matrix(df[,2:60]))
generalCorData <- flattenCorrMatrix(corrData$r, corrData$P)
generalCorData
generalCorData.names <- generalCorData$row  + generalCorData$column
corrData<-rcorr(as.matrix(df[,2:60]))
generalCorData <- flattenCorrMatrix(corrData$r, corrData$P)
generalCorData
generalCorData.names <- cbind(generalCorData$row,generalCorData$column)
corrData<-rcorr(as.matrix(df[,2:60]))
generalCorData <- flattenCorrMatrix(corrData$r, corrData$P)
generalCorData
generalCorData.names <- cbind(generalCorData$row,generalCorData$column)
generalCorData.names
corrData<-rcorr(as.matrix(df[,2:60]))
generalCorData <- flattenCorrMatrix(corrData$r, corrData$P)
generalCorData
generalCorData.names <- paste(generalCorData$row,generalCorData$column)
corrData<-rcorr(as.matrix(df[,2:60]))
generalCorData <- flattenCorrMatrix(corrData$r, corrData$P)
generalCorData
generalCorData.names <- paste(generalCorData$row,generalCorData$column)
generalCorData.names
corrData<-rcorr(as.matrix(df[,2:60]))
generalCorData <- flattenCorrMatrix(corrData$r, corrData$P)
generalCorData
generalCorData.names <- paste(generalCorData$row,generalCorData$column,sep= "&")
corrData<-rcorr(as.matrix(df[,2:60]))
generalCorData <- flattenCorrMatrix(corrData$r, corrData$P)
generalCorData
generalCorData.names  <- paste(generalCorData$row,generalCorData$column,sep= "&")
corrData<-rcorr(as.matrix(df[,2:60]))
generalCorData <- flattenCorrMatrix(corrData$r, corrData$P)
generalCorData
generalCorData.Names  <- paste(generalCorData$row,generalCorData$column,sep= "&")
theme_set(theme_bw())
generalCorData %>% arrange(desc(abs(cor))) %>%
ggplot( aes(x=Names, y=cor)) +
geom_bar(stat="identity", width=.5, fill="tomato3") +
labs(title="Ordered Bar Chart",
subtitle="Correlation Values",
caption="Correlation graph") +
theme(axis.text.x = element_text(angle=65, vjust=0.6))
theme_set(theme_bw())
generalCorData %>% arrange(desc(abs(cor))) %>%
ggplot( aes(x=.Names, y=cor)) +
geom_bar(stat="identity", width=.5, fill="tomato3") +
labs(title="Ordered Bar Chart",
subtitle="Correlation Values",
caption="Correlation graph") +
theme(axis.text.x = element_text(angle=65, vjust=0.6))
corrData<-rcorr(as.matrix(df[,2:60]))
generalCorData <- flattenCorrMatrix(corrData$r, corrData$P)
generalCorData
generalCorData$Names <- paste(generalCorData$row,generalCorData$column,sep= "&")
theme_set(theme_bw())
generalCorData %>% arrange(desc(abs(cor))) %>%
ggplot( aes(x=Names, y=cor)) +
geom_bar(stat="identity", width=.5, fill="tomato3") +
labs(title="Ordered Bar Chart",
subtitle="Correlation Values",
caption="Correlation graph") +
theme(axis.text.x = element_text(angle=65, vjust=0.6))
corrData<-rcorr(as.matrix(df[,2:60]))
generalCorData <- flattenCorrMatrix(corrData$r, corrData$P)
generalCorData
generalCorData$Names <- paste(generalCorData$row,generalCorData$column,sep= "&")
generalCorData$Names
theme_set(theme_bw())
generalCorData %>% arrange(desc(abs(cor))) %>%
filter(cor > 0.5)
ggplot( aes(x=Names, y=cor)) +
geom_bar(stat="identity", width=.5, fill="tomato3") +
labs(title="Ordered Bar Chart",
subtitle="Correlation Values",
caption="Correlation graph") +
theme(axis.text.x = element_text(angle=65, vjust=0.6))
theme_set(theme_bw())
generalCorData %>% arrange(desc(abs(cor))) %>%
filter(cor > 0.5) %>%
ggplot( aes(x=Names, y=cor)) +
geom_bar(stat="identity", width=.5, fill="tomato3") +
labs(title="Ordered Bar Chart",
subtitle="Correlation Values",
caption="Correlation graph") +
theme(axis.text.x = element_text(angle=65, vjust=0.6))
theme_set(theme_bw())
generalCorData %>% arrange(desc(abs(cor))) %>%
filter(cor > 0.7) %>%
ggplot( aes(x=Names, y=cor)) +
geom_bar(stat="identity", width=.5, fill="tomato3") +
labs(title="Ordered Bar Chart",
subtitle="Correlation Values",
caption="Correlation graph") +
theme(axis.text.x = element_text(angle=65, vjust=0.6))
theme_set(theme_bw())
generalCorData %>% arrange(desc(abs(cor))) %>%
filter(cor > 0.8) %>%
ggplot( aes(x=Names, y=cor)) +
geom_bar(stat="identity", width=.5, fill="tomato3") +
labs(title="Ordered Bar Chart",
subtitle="Correlation Values",
caption="Correlation graph") +
theme(axis.text.x = element_text(angle=65, vjust=0.6))
theme_set(theme_bw())
generalCorData %>% arrange(desc(abs(cor))) %>%
filter(cor > 0.9) %>%
ggplot( aes(x=Names, y=cor)) +
geom_bar(stat="identity", width=.5, fill="tomato3") +
labs(title="Ordered Bar Chart",
subtitle="Correlation Values",
caption="Correlation graph") +
theme(axis.text.x = element_text(angle=65, vjust=0.6))
theme_set(theme_bw())
generalCorData %>% arrange(desc(abs(cor))) %>%
filter(cor > 0.95) %>%
ggplot( aes(x=Names, y=cor)) +
geom_bar(stat="identity", width=.5, fill="tomato3") +
labs(title="Ordered Bar Chart",
subtitle="Correlation Values",
caption="Correlation graph") +
theme(axis.text.x = element_text(angle=65, vjust=0.6))
ggpairs(df,
columns = c("ASELS_Price","PETKM_Price","EREGL_Price","SISE_Price","GARAN_Price","AKBNK_Price","TOASO_Price","KCHOL_Price","TUPRS_Price"),
upper = list(continuous = wrap("cor",
size = 10)),
lower = list(continuous = "smooth"))
generalCorData %>% arrange(desc(abs(cor))) %>%
filter(cor > 0.95)
theme_set(theme_bw())
generalCorData %>% arrange(desc(abs(cor))) %>%
filter(cor > 0.95) %>%
ggplot( aes(x=Names, y=cor)) +
geom_bar(stat="identity", width=.5, fill="tomato3") +
labs(title="Ordered Bar Chart",
subtitle="Correlation Values",
caption="Correlation graph") +
theme(axis.text.x = element_text(angle=65, vjust=0.6))
ggpairs(df,
columns = c("ASELS_Price","PETKM_Price","EREGL_Price","SISE_Price","GARAN_Price","AKBNK_Price","TOASO_Price","KCHOL_Price","TUPRS_Price"),
upper = list(continuous = wrap("cor",
size = 10)),
lower = list(continuous = "smooth"))
generalCorData %>% arrange(desc(abs(cor))) %>%
filter(cor > 0.95)
theme_set(theme_bw())
generalCorData %>% arrange(desc(abs(cor))) %>%
filter(cor > 0.95) %>%
ggplot( aes(x=Names, y=cor)) +
geom_bar(stat="identity", width=.5, fill="tomato3") +
labs(title="Ordered Bar Chart",
subtitle="Correlation Values",
caption="Correlation graph") +
theme(axis.text.x = element_text(angle=65, vjust=0.6))
g1 <- ggplot(df, aes(df$TOASO_Price, df$KCHOL_Price)) +
geom_count(color="darkred") +
geom_smooth(method="lm", se=F,color="blue")
g2 <- ggplot(df, aes(df$TUPRS_Price, df$ASELS_Price)) +
geom_count(color="darkred") +
geom_smooth(method="lm", se=F,color="blue")
g5 <- ggplot(df, aes(df$GARAN_Price, df$AKBNK_Price)) +
geom_count(color="darkred") +
geom_smooth(method="lm", se=F,color="blue")
g5 <- ggplot(df, aes(df$GARAN_Price, df$AKBNK_Price)) +
geom_count(color="darkred") +
geom_smooth(method="lm", se=F,color="blue")
g4 <- ggplot(df, aes(df$EREGL_Price, df$SISE_Price)) +
geom_count(color="darkred") +
geom_smooth(method="lm", se=F,color="blue")
g3 <- ggplot(df, aes(df$ASELS_Price, df$PETKM_Price)) +
geom_count(color="darkred") +
geom_smooth(method="lm", se=F,color="blue")
g2 <- ggplot(df, aes(df$TUPRS_Price, df$ASELS_Price)) +
geom_count(color="darkred") +
geom_smooth(method="lm", se=F,color="blue")
g1 <- ggplot(df, aes(df$TOASO_Price, df$KCHOL_Price)) +
geom_count(color="darkred") +
geom_smooth(method="lm", se=F,color="blue")
grid.arrange(g1,
g2,
g3,
g4,
g5
ncol=5)
grid.arrange(g1,
g2,
g3,
g4,
g5,
ncol=5)
library(Hmisc)
library(gridExtra)
library(GGally)
library(tibble)
library(dplyr)
library(tidyr)
library(reshape2)
library(tidyverse)
library(ggplot2)
library(corrgram)
library(corrplot)
grid.arrange(g1,
g2,
g3,
g4,
g5,
ncol=5)
grid.arrange(g1,
g2,
g3,
g4,
g5,
nrow=5)
linearMod1 <- lm(df$TOASO_Price ~ df$KCHOL_Price, data=df)
linearMod2 <- lm(df$TUPRS_Price ~ df$ASELS_Price, data=df)
linearMod3 <- lm(df$ASELS_Price ~ df$PETKM_Price, data=df)
linearMod4 <- lm(df$EREGL_Price ~ df$SISE_Price, data=df)
linearMod5 <- lm(df$GARAN_Price ~ df$AKBNK_Price, data=df)
summary(linearMod1)
summary(linearMod2)
summary(linearMod3)
summary(linearMod4)
summary(linearMod5)
library(Hmisc)
library(gridExtra)
library(GGally)
library(tibble)
library(dplyr)
library(tidyr)
library(reshape2)
library(tidyverse)
library(ggplot2)
library(corrgram)
library(corrplot)
library(date)
knitr::opts_chunk$set(echo = T,
results = "hide")
library(Hmisc)
library(gridExtra)
library(GGally)
library(tibble)
library(dplyr)
library(tidyr)
library(reshape2)
library(tidyverse)
library(ggplot2)
library(corrgram)
library(corrplot)
library(date)
knitr::opts_chunk$set(echo = T,
results = "hide")
library(Hmisc)
library(gridExtra)
library(GGally)
library(tibble)
library(dplyr)
library(tidyr)
library(reshape2)
library(tidyverse)
library(ggplot2)
library(corrgram)
library(corrplot)
library(date)
knitr::opts_chunk$set(echo = T,
results = "hide")
library(Hmisc)
library(gridExtra)
library(GGally)
library(tibble)
library(dplyr)
library(tidyr)
library(reshape2)
library(tidyverse)
library(ggplot2)
library(corrgram)
library(corrplot)
library(date)
library(readxl)
#we calculate the annual average of stocks.
annual_average<- aggregate(bist30[,62:91], list(format(bist30$Dates, "%Y")), mean)
View(annual_average)
#get transpose of annual_average dataset.
transpose <- as.matrix(annual_average[,-1])
rownames(transpose) <- annual_average[,1]
annual_average <- t(transpose)
View(annual_average)
#lets define wcss(Within cluster sum of squares) vector.
wcss <- vector()
#lets find the distance to the center for each predefined center numbers.
for (i in 1:7) wcss[i] <- sum(kmeans(annual_average, i)$withinss)
View(wcss)
#lets determine the breakdown point of the wcss graph.
plot(1:7, wcss, type="l")
#3 centers are the optimum number for centers.
kmeans(annual_average, 3)
knitr::opts_chunk$set(echo = T,
results = "hide")
library(Hmisc)
library(gridExtra)
library(GGally)
library(tibble)
library(dplyr)
library(tidyr)
library(reshape2)
library(tidyverse)
library(ggplot2)
library(corrgram)
library(corrplot)
library(date)
library(readxl)
#we calculate the annual average of stocks.
annual_average<- aggregate(bist30[,62:91], list(format(bist30$Dates, "%Y")), mean)
View(annual_average)
#get transpose of annual_average dataset.
transpose <- as.matrix(annual_average[,-1])
rownames(transpose) <- annual_average[,1]
annual_average <- t(transpose)
View(annual_average)
#lets define wcss(Within cluster sum of squares) vector.
wcss <- vector()
#lets find the distance to the center for each predefined center numbers.
for (i in 1:7) wcss[i] <- sum(kmeans(annual_average, i)$withinss)
View(wcss)
#lets determine the breakdown point of the wcss graph.
plot(1:7, wcss, type="l")
#3 centers are the optimum number for centers.
kmeans(annual_average, 3)
c1 <- bist30[,[62:90]]
c1 <- bist30[,bist30[62:90]]
c1 <- bist30[,62:90]
c1 <- bist30[,62:90]
c1
c1 <- bist30[,names(62:90])]
c1 <- bist30[,names([62:90])]
c1 <- names(bist30[,62:90])
c1
c1 <- names(bist30[,62:90])
c2 <- c(3,3,2,2,2,3,2,2,2,2,1,3,3,3,3,3,3,3,2,3,3,3,2,3,3,3,2,2,3,3)
length(c2)
c1 <- names(bist30[,62:90])
c2 <- c(3,3,2,2,2,3,2,2,2,2,1,3,3,3,3,3,3,3,2,3,3,3,2,3,3,3,2,2,3,3)
clusterFrame <- melt(data.frame(c1,c2))
c1 <- names(bist30[,61:90])
c2 <- c(3,3,2,2,2,3,2,2,2,2,1,3,3,3,3,3,3,3,2,3,3,3,2,3,3,3,2,2,3,3)
clusterFrame <- melt(data.frame(c1,c2))
c1 <- names(bist30[,61:90])
c2 <- c(3,3,2,2,2,3,2,2,2,2,1,3,3,3,3,3,3,3,2,3,3,3,2,3,3,3,2,2,3,3)
clusterFrame <- melt(data.frame(c1,c2))
clusterFrame
c1 <- companyNames
c2 <- c(3,3,2,2,2,3,2,2,2,2,1,3,3,3,3,3,3,3,2,3,3,3,2,3,3,3,2,2,3,3)
clusterFrame <- melt(data.frame(c1,c2))
clusterFrame
c1 <- companyNames
c2 <- c(3,3,2,2,2,3,2,2,2,2,1,3,3,3,3,3,3,3,2,3,3,3,2,3,3,3,2,2,3,3)
clusterFrame <- melt(data.frame(c1,c2))
clusterFrame$variable <- NULL
knitr::opts_chunk$set(echo = T,
results = "hide")
library(Hmisc)
library(gridExtra)
library(GGally)
library(tibble)
library(dplyr)
library(tidyr)
library(reshape2)
library(tidyverse)
library(ggplot2)
library(corrgram)
library(corrplot)
library(date)
library(readxl)
library(knitr)
library(Hmisc)
library(gridExtra)
library(GGally)
library(tibble)
library(dplyr)
library(tidyr)
library(reshape2)
library(tidyverse)
library(ggplot2)
library(corrgram)
library(corrplot)
library(date)
library(readxl)
library(knitr)
knitr::opts_chunk$set(echo = T,
results = "hide")
library(Hmisc)
library(gridExtra)
library(GGally)
library(tibble)
library(dplyr)
library(tidyr)
library(reshape2)
library(tidyverse)
library(ggplot2)
library(corrgram)
library(corrplot)
library(date)
library(readxl)
library(knitr)
kable(clusterFrame,caption = "Kmeans Cluster Table")
c1 <- companyNames
c2 <- c(3,3,2,2,2,3,2,2,2,2,1,3,3,3,3,3,3,3,2,3,3,3,2,3,3,3,2,2,3,3)
clusterFrame <- melt(data.frame(c1,c2))
clusterFrame$variable <- NULL
names(clusterFrame) <- c("Companies","Groups")
kable(clusterFrame,caption = "Kmeans Cluster Table")
kable(clusterFrame,caption = "Kmeans Cluster Table")
table(clusterFrame)
kable(table(clusterFrame),caption = "Kmeans Cluster Table")
kable(clusterFrame,caption = "Kmeans Cluster Table")
ggplot(clusterFrame, aes(x = Names, y = Groups, colour = Groups)) +
geom_point() +
facet_wrap( ~ group)
ggplot(clusterFrame, aes(x = Names, y = Groups, colour = Groups)) +
geom_point() +
facet_wrap( ~ Groups)
ggplot(clusterFrame, aes(x = Companies, y = Groups, colour = Groups)) +
geom_point() +
facet_wrap( ~ Groups)
ggplot(clusterFrame, aes(x =Groups , y = Companies, colour = Groups)) +
geom_point() +
facet_wrap( ~ Groups)
ggplot(clusterFrame, aes(x =Groups , y = Companies, colour = Groups,fill = Groups)) +
geom_point() +
facet_wrap( ~ Groups)
ggplot(clusterFrame, aes(x =Groups , y = Companies, colour = Groups,fill = Groups)) +
geom_text() +
facet_wrap( ~ Groups)
ggplot(clusterFrame, aes(x =Groups , y = Companies, colour = Groups,fill = Groups)) +
geom_point() + geom_text()
ggplot(clusterFrame, aes(x =Groups , y = Companies, colour = Groups,fill = Groups)) +
geom_point() + geom_text(label = "nanana")
facet_wrap( ~ Groups)
ggplot(clusterFrame, aes(x =Groups , y = Companies, colour = Groups,fill = Groups)) +
geom_point() + geom_text(label = Companies)
ggplot(clusterFrame, aes(x =Groups , y = Companies, colour = Groups,fill = Groups)) +
geom_point() + geom_text(label = clusterFrame$Companies)
facet_wrap( ~ Groups)
ggplot(clusterFrame, aes(x =Groups , y = 1, colour = Groups,fill = Groups)) +
geom_point() + geom_text(label = clusterFrame$Companies)
facet_wrap( ~ Groups)
ggplot(clusterFrame, aes(x =Groups , y = ., colour = Groups,fill = Groups)) +
geom_point() + geom_text(label = clusterFrame$Companies)
ggplot(clusterFrame, aes(x =Groups , y = Groups, colour = Groups,fill = Groups)) +
geom_point() + geom_text(label = clusterFrame$Companies)
facet_wrap( ~ Groups)
ggplot(clusterFrame, aes(x =Groups , y = Companies, colour = Groups,fill = Groups)) +
geom_point() + geom_text(label = clusterFrame$Companies)
facet_wrap( ~ Groups)
ggplot(clusterFrame, aes(x =Groups , y = Companies, colour = Groups,fill = Groups)) + geom_text(label = clusterFrame$Companies)
facet_wrap( ~ Groups)
ggplot(clusterFrame, aes(x =Groups , y = seq(1,30,1), colour = Groups,fill = Groups)) + geom_text(label = clusterFrame$Companies)
facet_wrap( ~ Groups)
ggplot(clusterFrame, aes(x =Groups , y = seq(1,30,1), colour = Groups,fill = Groups)) + geom_text(label = clusterFrame$Companies) +
xlab(label = "Numbers of Groups") +
ylab(label = "Seperation according to Groups")
facet_wrap( ~ Groups)
ggplot(clusterFrame, aes(x =Groups , y = seq(1,30,1), colour = Groups,fill = Groups)) + geom_text(label = clusterFrame$Companies) +
xlab(label = "Numbers of Groups") +
ylab(label = "Seperation according to Groups") +
facet_wrap( ~ Groups)
ggplot(clusterFrame, aes(x =Groups , y = seq(1,30,1), colour = Groups,fill = Groups)) + geom_text(label = clusterFrame$Companies) +
xlab(label = "Numbers of Groups") +
ylab(label = "Seperation according to Groups")
